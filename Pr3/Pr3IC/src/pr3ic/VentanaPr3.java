/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package pr3ic;

import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DanSirak
 */
public class VentanaPr3 extends javax.swing.JFrame {
    private Kmeans km;
    private Bayes by;
    private Lloyd ly;
    private String prueba;
    private String muestra;
    /**
     * Creates new form VentanaPr3
     */
    public VentanaPr3() {
        initComponents();
        km = null;
        by = null;
        this.setName("Clasificador Pr3");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        entrenarBoton = new javax.swing.JButton();
        examinarMuestras = new javax.swing.JButton();
        muestrasField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        kmeansRadioButton = new javax.swing.JRadioButton();
        bayesRadioButton = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        archivoTestField = new javax.swing.JTextField();
        explorarTestBoton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultadoArea = new javax.swing.JTextArea();
        clasificaBoton = new javax.swing.JButton();
        lloydradiobutton = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaMuestras = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaCentros = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        entrenarBoton.setText("Entrenar");
        entrenarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entrenarBotonActionPerformed(evt);
            }
        });

        examinarMuestras.setText("Examinar");
        examinarMuestras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                examinarMuestrasActionPerformed(evt);
            }
        });

        jLabel1.setText("Muestras para entrenar:");

        buttonGroup1.add(kmeansRadioButton);
        kmeansRadioButton.setText("K-means");

        buttonGroup1.add(bayesRadioButton);
        bayesRadioButton.setSelected(true);
        bayesRadioButton.setText("Bayes");

        jLabel2.setText("Archivo test:");

        explorarTestBoton.setText("Explorar");
        explorarTestBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                explorarTestBotonActionPerformed(evt);
            }
        });

        resultadoArea.setColumns(20);
        resultadoArea.setRows(5);
        resultadoArea.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resultadoAreaMouseClicked(evt);
            }
        });
        resultadoArea.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                resultadoAreaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                resultadoAreaFocusLost(evt);
            }
        });
        jScrollPane1.setViewportView(resultadoArea);

        clasificaBoton.setText("Clasifica");
        clasificaBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clasificaBotonActionPerformed(evt);
            }
        });

        buttonGroup1.add(lloydradiobutton);
        lloydradiobutton.setText("Lloyd");
        lloydradiobutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lloydradiobuttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(muestrasField)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(examinarMuestras, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(archivoTestField)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(explorarTestBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(clasificaBoton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lloydradiobutton, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(entrenarBoton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(kmeansRadioButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bayesRadioButton)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(examinarMuestras)
                    .addComponent(muestrasField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(kmeansRadioButton)
                    .addComponent(bayesRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(entrenarBoton)
                    .addComponent(lloydradiobutton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(explorarTestBoton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(archivoTestField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clasificaBoton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tablaMuestras.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Clase", "Datos"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tablaMuestras);

        jLabel3.setText("Muestras:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 745, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        tablaCentros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Clase", "Parámetros"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tablaCentros);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void examinarMuestrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_examinarMuestrasActionPerformed
        JFileChooser jfc = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
            "TXT files", "txt");
        jfc.setFileFilter(filter);
        int returnVal = jfc.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            muestrasField.setText(jfc.getSelectedFile().getPath());
        }
    }//GEN-LAST:event_examinarMuestrasActionPerformed

    private void explorarTestBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_explorarTestBotonActionPerformed
        
        JFileChooser jfc = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
            "TXT files", "txt");
        jfc.setFileFilter(filter);
        int returnVal = jfc.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            archivoTestField.setText(jfc.getSelectedFile().getPath());
        }
    }//GEN-LAST:event_explorarTestBotonActionPerformed

    private void entrenarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entrenarBotonActionPerformed
        // TODO code application logic here
        String fichero = muestrasField.getText();
        if (kmeansRadioButton.isSelected()) {
            km = new Kmeans();
            km.entrena(fichero);
            ArrayList<String> m = km.getMuestras();
            ArrayList<String> c = km.getClases();
            ArrayList<double[]> v = km.getMeans();
            ArrayList<String> vc = km.getVClases();
            DefaultTableModel modelo = (DefaultTableModel) tablaMuestras.getModel();
            int cantidad = m.size();
            modelo.setRowCount(cantidad);
            for (int i = 0; i < cantidad; i++) {
                tablaMuestras.setValueAt(m.get(i), i, 0);
                tablaMuestras.setValueAt(c.get(i), i, 1);
            }
            modelo = (DefaultTableModel) tablaCentros.getModel();
            cantidad =v.size();
            modelo.setRowCount(cantidad);
            String tmp = "";
            double[] tmpD;
            for (int i = 0; i < cantidad; i++) {
               tmp = "(";
               for (int j = 0; j < v.get(i).length; j++){
                   tmp += (v.get(i)[j]) + " ";
               }
               tmp += ")";
                tablaCentros.setValueAt(tmp, i, 0);
                tablaCentros.setValueAt(vc.get(i), i, 1);
            }
        } else 
            if (bayesRadioButton.isSelected()) {
                by = new Bayes();
                by.entrena(fichero);
                ArrayList<String> m = by.getMuestras();
                ArrayList<String> c = by.getMuestrasClases();
                DefaultTableModel modelo = (DefaultTableModel) tablaMuestras.getModel();
                int cantidad = m.size();
                modelo.setRowCount(cantidad);
                for (int i = 0; i < cantidad; i++) {
                    tablaMuestras.setValueAt(m.get(i), i, 0);
                    tablaMuestras.setValueAt(c.get(i), i, 1);
                }
                modelo = (DefaultTableModel) tablaCentros.getModel();
                
                
                ArrayList<double[][]> C = by.getC();
                ArrayList<double[][]> M = by.getM();
                cantidad =M.size();
                modelo.setRowCount(cantidad);
                String tmp = "";
                String frase;
                String fraseM;
                for (int k = 0; k < by.getClases().size(); k++) {
                    frase = "C= {";
                    fraseM = "M= {";
                    for (int i = 0; i < by.getCaracteristicasCount(); i++) {
                        for(int j = 0; j < by.getCaracteristicasCount(); j++){
                            frase += C.get(k)[i][j] + ", ";
                            
                        }
                        fraseM += M.get(k)[i][0] + ", ";
                        if (i < by.getCaracteristicasCount()-1) frase += "  ";

                    }
                    frase += "}";
                    fraseM += "}";
                    tablaCentros.setValueAt(by.getClases().get(k), k, 0);
                    tablaCentros.setValueAt(fraseM + "\n" +  frase, k, 1);
            }
            }else {
                if (lloydradiobutton.isSelected()){
                    ly = new Lloyd();
                    ly.entrena(fichero);
                    ArrayList<double[][]> centros = ly.getCentros();
                    ArrayList<String> clases = ly.getClases();
                    DefaultTableModel modelo = (DefaultTableModel) tablaMuestras.getModel();
                    ArrayList<String> muestras = ly.getMuestras();
                    ArrayList<String> mc = ly.getClaseMuestra();
                    int cantidad = muestras.size();
                    modelo.setRowCount(cantidad);
                    for (int i = 0; i < cantidad; i++) {
                        tablaMuestras.setValueAt(muestras.get(i), i, 1);
                        tablaMuestras.setValueAt(mc.get(i), i, 0);
                    }
                    String frase;
                    modelo = (DefaultTableModel) tablaCentros.getModel();
                    cantidad = clases.size();
                    modelo.setRowCount(cantidad);
                    for (int k = 0; k < clases.size(); k++) {
                        frase="C" + (k+1) + "= (";
                        for (int j = 0; j < ly.getCaracteristicas(); j++){
                            if (j < ly.getCaracteristicas()-1) frase += centros.get(k)[j][0] + ",";
                            else frase += centros.get(k)[j][0];
                        }
                        frase+=")";
                        tablaCentros.setValueAt(frase, k, 1);
                        tablaCentros.setValueAt(clases.get(k), k, 0);
                    }
                }
            }
        
    }//GEN-LAST:event_entrenarBotonActionPerformed

    private void clasificaBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clasificaBotonActionPerformed
        if (kmeansRadioButton.isSelected()) { 
            if(km == null) JOptionPane.showMessageDialog(this, "Necesita entrenar el algoritmo antes");
            else {
                prueba = archivoTestField.getText();
                if (km.pertenece(prueba))
                    resultadoArea.setText("Clasificación de " + prueba + " correcta.");
                else 
                    resultadoArea.setText("Clasificación de " + prueba + " incorrecta.");
            }
        } else if (bayesRadioButton.isSelected()){
            if(by == null) JOptionPane.showMessageDialog(this, "Necesita entrenar el algoritmo antes");
            else {
                prueba = archivoTestField.getText();
                if (by.pertenencia(prueba))
                    resultadoArea.setText("Clasificación de " + prueba + " correcta.");
                else 
                    resultadoArea.setText("Clasificación de " + prueba + " incorrecta.");
            }
        } else if (lloydradiobutton.isSelected()) {
                prueba = archivoTestField.getText();
                if (ly.pertenencia(prueba))
                    resultadoArea.setText("Clasificación de " + prueba + " correcta.");
                else 
                    resultadoArea.setText("Clasificación de " + prueba + " incorrecta.");
        }
    }//GEN-LAST:event_clasificaBotonActionPerformed

    private void resultadoAreaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resultadoAreaMouseClicked
        if (!resultadoArea.getText().equalsIgnoreCase(""))
            JOptionPane.showMessageDialog(this, resultadoArea.getText());
    }//GEN-LAST:event_resultadoAreaMouseClicked

    private void resultadoAreaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_resultadoAreaFocusGained
       // if (!resultadoArea.getText().equalsIgnoreCase(""))
         //   JOptionPane.showMessageDialog(this, resultadoArea.getText());
    }//GEN-LAST:event_resultadoAreaFocusGained

    private void resultadoAreaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_resultadoAreaFocusLost
        this.transferFocus();
    }//GEN-LAST:event_resultadoAreaFocusLost

    private void lloydradiobuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lloydradiobuttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lloydradiobuttonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField archivoTestField;
    private javax.swing.JRadioButton bayesRadioButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton clasificaBoton;
    private javax.swing.JButton entrenarBoton;
    private javax.swing.JButton examinarMuestras;
    private javax.swing.JButton explorarTestBoton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JRadioButton kmeansRadioButton;
    private javax.swing.JRadioButton lloydradiobutton;
    private javax.swing.JTextField muestrasField;
    private javax.swing.JTextArea resultadoArea;
    private javax.swing.JTable tablaCentros;
    private javax.swing.JTable tablaMuestras;
    // End of variables declaration//GEN-END:variables
}
